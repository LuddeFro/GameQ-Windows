import java.util.ArrayList;
import java.util.List;

import org.jnetpcap.Pcap;
import org.jnetpcap.PcapIf;



public class PacketHandler {

	
	public PacketHandler() {
		
		
		List<PcapIf> alldevs = new ArrayList<PcapIf>(); // Will be filled with NICs 
		StringBuilder errbuf = new StringBuilder(); // For any error msgs 
		
		//list devices on the system
		int r = Pcap.findAllDevs(alldevs, errbuf);  
        if (r == Pcap.NOT_OK || alldevs.isEmpty()) {  
            System.err.printf("Can't read list of devices, error is %s", errbuf  
                .toString());  
            return;  
        }  
		
        System.out.println("Network devices found:");  
        
        int i = 0;  
        PcapIf mainDevice;
        for (PcapIf device : alldevs) {  
            String description =  
                (device.getDescription() != null) ? device.getDescription()  
                    : "No description available";  
            System.out.printf("#%d: %s [%s]\n", i++, device.getName(), description);
            
            //monitor each device
            openStreams(device, errbuf);
            
        }  
        
	}
	
	private void openStreams(PcapIf device, StringBuilder errbuf) {
		int snaplen = 64 * 1024;           // Capture all packets, no trucation  
        int flags = Pcap.MODE_PROMISCUOUS; // capture all packets  
        int timeout = 10 * 1000;           // 10 seconds in millis  
        Pcap pcap =  
            Pcap.openLive(device.getName(), snaplen, flags, timeout, errbuf);  
  
        if (pcap == null) {  
            System.err.printf("Error while opening device for capture: "  
                + errbuf.toString());  
            return;  
        }  
  
	}
	
	
}
